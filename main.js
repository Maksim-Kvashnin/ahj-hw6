(()=>{"use strict";class t{constructor(t,e){this.container=t;const n=document.createElement("div");n.classList.add("container-task"),t.appendChild(n);const s=document.createElement("div");s.classList.add("tasks_header"),n.appendChild(s);const i=document.createElement("h4");i.classList.add("tasks_header_text"),i.textContent=e,s.appendChild(i);const d=document.createElement("span");d.classList.add("task_header_options"),d.textContent="...",s.appendChild(d);const a=document.createElement("div");a.classList.add("task_list"),n.appendChild(a);const o=document.createElement("div");o.classList.add("adder_card"),o.textContent="+ Add another card",n.appendChild(o),o.addEventListener("click",(t=>this.onAddCardClick(t))),a.addEventListener("mousedown",(t=>this.onMouseDownTask(t))),this.tasks=n,this.taskList=a,this.adderCard=o,this.dragging=null,this.startX=0,this.startY=0}onMouseDownTask(t){if(t.preventDefault(),0!==t.button)return;const e=t.target;if(!e.classList.contains("task_card"))return;this.dragging=e;const n=this.dragging.getBoundingClientRect();this.startX=t.clientX-n.left,this.startY=t.clientY-n.top,this.previousNeighbour=this.dragging.previousElementSibling,this.nextNeighbour=this.dragging.nextElementSibling,this.placeholder=document.createElement("div"),this.placeholder.style.width=`${this.dragging.offsetWidth}px`,this.placeholder.style.height=`${this.dragging.offsetHeight}px`,this.dragging.parentNode.insertBefore(this.placeholder,this.dragging),this.dragging.classList.add("dragging"),this.dragging.style.left=`${n.left}px`,this.dragging.style.top=`${n.top}px`,this.dragging.style.width=`${n.width}px`,this.onMouseUp=this.onMouseUp.bind(this),this.onMouseMove=this.onMouseMove.bind(this),document.documentElement.addEventListener("mouseup",this.onMouseUp),document.documentElement.addEventListener("mousemove",this.onMouseMove)}onMouseMove(t){if(!this.dragging)return;const e=t.clientX-this.startX,n=t.clientY-this.startY;this.dragging.style.left=`${e}px`,this.dragging.style.top=`${n}px`;const{target:s}=t;if(s.classList.contains("task_card")){const e=s.getBoundingClientRect();t.clientY-e.top>e.height/2?s.parentNode.insertBefore(this.placeholder,s.nextSibling):s.parentNode.insertBefore(this.placeholder,s)}}onMouseUp(t){if(!this.dragging)return;this.dragging.style=void 0;const{target:e}=t;let n=e.previousElementSibling;n&&!n.classList.contains("task_card")&&(n=null);let s=e.nextElementSibling;s&&!s.classList.contains("task_card")&&(s=null);const i=e.closest(".task_list");let d=i;i?!i||n||s||i.appendChild(this.dragging):(n=this.previousNeighbour,s=this.nextNeighbour,d=this.dragging.parentNode),n?d.insertBefore(this.dragging,n.nextSibling):s?d.insertBefore(this.dragging,s):d.appendChild(this.dragging),this.dragging.classList.remove("dragging"),this.placeholder&&this.placeholder.parentNode&&this.placeholder.parentNode.removeChild(this.placeholder),this.dragging=null,this.placeholder=null,document.documentElement.removeEventListener("mouseup",this.onMouseUp),document.documentElement.removeEventListener("mouseover",this.onMouseMove)}onAddCardClick(t){0===t.button&&this.addCard()}addCard(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;const e=document.createElement("div");e.classList.add("task_card");const n=document.createElement("div");n.classList.add("close_button_container"),e.appendChild(n);const s=document.createElement("span");s.classList.add("close_button"),s.innerText="×",s.addEventListener("click",(t=>{t.preventDefault(),e.remove()})),n.appendChild(s);const i=document.createElement("div");i.classList.add("content_card"),t?(i.setAttribute("contenteditable","true"),i.innerText=t):i.innerText="Нажмите карандаш, чтобы начать редактирование",e.appendChild(i);const d=document.createElement("div");d.classList.add("card_text_edit"),d.innerText="✎",e.appendChild(d),d.addEventListener("click",(()=>{null===i.getAttribute("contenteditable")&&(i.textContent=""),i.setAttribute("contenteditable","true"),i.focus()})),this.taskList.appendChild(e)}}const e=document.querySelector(".container").querySelectorAll(".task")[0],n=document.createElement("div");n.classList.add("container-tasks"),e.appendChild(n);const s=new t(n,"todo"),i=new t(n,"in progress");new t(n,"done"),["1","2","3"].forEach((t=>s.addCard(t))),["Задача 1","Задача 2"].forEach((t=>{i.addCard(t)}))})();
//# sourceMappingURL=main.js.map